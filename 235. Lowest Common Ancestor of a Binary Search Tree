/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */

//time = O(n)
//这里有TreeNode root，但是没有parentNode
//小本本！！！第九页
/**将LCA分成4种情况讨论：
* 1. left, right subtree 一边一个(A && B) -> LCA = root
* 2. A & !B -> A
* 3. !A & B -> B
* 4. !A & !B -> null
* 将LCA变成返回A or B的问题
*/


//Binary Search写这个！！！！
class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if (root.val > p.val && root.val > q.val) {   //p, q都在left subtree
            return lowestCommonAncestor(root.left, p, q);
        }
        if (root.val < p.val && root.val < q.val) {   //p, q都在right subtree
            return lowestCommonAncestor(root.right, p, q); 
        }
        return root;   //left, right subtree一边一个，或者p == root || q == root
    }
}
